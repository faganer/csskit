/* ========================================================================
   Reset Utilities: http://compass-style.org/reference/compass/reset/utilities/
 ========================================================================== */
/* Layout
   ========================================================================== */
/* Typography
   ========================================================================== */
/* Component: Flex, build with UIkit 3.3.3.
   ==========================================================================*/
/*
 * Remove pseudo elements created by micro clearfix as precaution
 */
/* Alignment
 ========================================================================== */
/*
 * Align items along the main axis of the current line of the flex container
 * Row: Horizontal
 */
/*
 * Align items in the cross axis of the current line of the flex container
 * Row: Vertical
 */
/* Direction
 ========================================================================== */
/* Wrap
 ========================================================================== */
/*
 * Aligns items within the flex container when there is extra space in the cross-axis
 * Only works if there is more than one line of flex items
 */
/* Item ordering
 ========================================================================== */
/*
 * Default is 0
 */
/* Item dimensions
 ========================================================================== */
/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */
/*
 * No Flex: 0 0 auto
 * Content dimensions
 */
/*
 * Relative Flex: 1 1 auto
 * Space is allocated considering content
 */
/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */
/* Colors
   ========================================================================== */
/* Links
   ========================================================================== */
/* ========================================================================
   Component: Flex, build with UIkit 3.3.3.
 ========================================================================== */
.ck-flex {
  display: -ms-flexbox;
  display: flex; }

.ck-flex-inline {
  display: -ms-inline-flexbox;
  display: inline-flex; }

/*
 * Remove pseudo elements created by micro clearfix as precaution
 */
.ck-flex::before,
.ck-flex::after,
.ck-flex-inline::before,
.ck-flex-inline::after {
  display: none; }

/* Alignment
 ========================================================================== */
/*
 * Align items along the main axis of the current line of the flex container
 * Row: Horizontal
 */
.ck-flex-left {
  -ms-flex-pack: start;
      justify-content: flex-start; }

.ck-flex-center {
  -ms-flex-pack: center;
      justify-content: center; }

.ck-flex-right {
  -ms-flex-pack: end;
      justify-content: flex-end; }

.ck-flex-between {
  -ms-flex-pack: justify;
      justify-content: space-between; }

.ck-flex-around {
  -ms-flex-pack: distribute;
      justify-content: space-around; }

/*
 * Align items in the cross axis of the current line of the flex container
 * Row: Vertical
 */
.ck-flex-stretch {
  -ms-flex-align: stretch;
      align-items: stretch; }

.ck-flex-top {
  -ms-flex-align: start;
      align-items: flex-start; }

.ck-flex-middle {
  -ms-flex-align: center;
      align-items: center; }

.ck-flex-bottom {
  -ms-flex-align: end;
      align-items: flex-end; }

/* Direction
 ========================================================================== */
.ck-flex-row {
  -ms-flex-direction: row;
      flex-direction: row; }

.ck-flex-row-reverse {
  -ms-flex-direction: row-reverse;
      flex-direction: row-reverse; }

.ck-flex-column {
  -ms-flex-direction: column;
      flex-direction: column; }

.ck-flex-column-reverse {
  -ms-flex-direction: column-reverse;
      flex-direction: column-reverse; }

/* Wrap
 ========================================================================== */
.ck-flex-nowrap {
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }

.ck-flex-wrap {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.ck-flex-wrap-reverse {
  -ms-flex-wrap: wrap-reverse;
      flex-wrap: wrap-reverse; }

/*
 * Aligns items within the flex container when there is extra space in the cross-axis
 * Only works if there is more than one line of flex items
 */
.ck-flex-wrap-stretch {
  -ms-flex-line-pack: stretch;
      align-content: stretch; }

.ck-flex-wrap-top {
  -ms-flex-line-pack: start;
      align-content: flex-start; }

.ck-flex-wrap-middle {
  -ms-flex-line-pack: center;
      align-content: center; }

.ck-flex-wrap-bottom {
  -ms-flex-line-pack: end;
      align-content: flex-end; }

.ck-flex-wrap-between {
  -ms-flex-line-pack: justify;
      align-content: space-between; }

.ck-flex-wrap-around {
  -ms-flex-line-pack: distribute;
      align-content: space-around; }

/* Item ordering
 ========================================================================== */
/*
 * Default is 0
 */
.ck-flex-first {
  -ms-flex-order: -1;
      order: -1; }

.ck-flex-last {
  -ms-flex-order: 99;
      order: 99; }

/* Item dimensions
 ========================================================================== */
/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */
/*
 * No Flex: 0 0 auto
 * Content dimensions
 */
.ck-flex-none {
  -ms-flex: none;
      flex: none; }

/*
 * Relative Flex: 1 1 auto
 * Space is allocated considering content
 */
.ck-flex-auto {
  -ms-flex: auto;
      flex: auto; }

/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */
.ck-flex-1 {
  -ms-flex: 1;
      flex: 1; }
